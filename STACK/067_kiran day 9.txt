KIRAN YADAV.S

1RN19CS067


CSE 4B

JOY OF CODING : DAY 9


1:

#include <stdio.h>
#include <stdlib.h>
#define MAX_ELE 4
void push (int[], int *);
void pop (int[], int *);
void display (int[], int *);


int
main ()
{
  int ch, top = -1;		// sp, TOS
  int s[MAX_ELE];
  for (;;)
    {
      printf ("1:push\n2:pop\n3:display\n4:Palindrome\n5.Exit\n");
      printf ("Enter choice: ");
      scanf ("%d", &ch);
      switch (ch)
	{
	case 1:
	  push (s, &top);
	  break;
	case 2:
	  pop (s, &top);
	  break;
	case 3:
	  display (s, &top);
	  break;
	default:
	  exit (0);
	}
    }
}


void
display (int s[], int *top)
{
  int i;
  if ((*top) == -1)
    printf ("stack empty\n");
  else
    {
      printf ("stack elements are\n");
      printf ("TOS is: ");
      for (i = (*top); i >= 0; i--)
	printf ("%d\n", s[i]);
    }
}

void
push (int *s, int *top)
{
  int ele;
  if ((*top) == MAX_ELE - 1)
    {
      printf ("stack overflow\n");
      return;
    }
  (*top)++;
  printf ("enter the element\n");
  scanf ("%d", &ele);
  s[*top] = ele;
}

void
pop (int s[], int *top)
{
  if ((*top) == -1)
    printf ("stack underflow\n");
  else
    {
      printf ("element popped is\n");
      printf ("%d\n", s[*top]);
      (*top)--;
    }
}


output:

1:push                                                                                                                                                                               
2:pop                                                                                                                                                                                
3:display                                                                                                                                                                            
4:Palindrome                                                                                                                                                                         
5.Exit                                                                                                                                                                               
Enter choice: 1                                                                                                                                                                      
enter the element                                                                                                                                                                    
6                                                                                                                                                                                    
1:push                                                                                                                                                                               
2:pop                                                                                                                                                                                
3:display                                                                                                                                                                            
4:Palindrome                                                                                                                                                                         
5.Exit                                                                                                                                                                               
Enter choice: 1                                                                                                                                                                      
enter the element                                                                                                                                                                    
7                                                                                                                                                                                    
1:push                                                                                                                                                                               
2:pop                                                                                                                                                                                
3:display                                                                                                                                                                            
4:Palindrome                                                                                                                                                                         
5.Exit                                                                                                                                                                               
Enter choice: 3                                                                                                                                                                      
stack elements are                                                                                                                                                                   
TOS is: 7                                                                                                                                                                            
6                                                                                                                                                                                    
1:push                                                                                                                                                                               
2:pop                                                                                                                                                                                
3:display                                                                                                                                                                            
4:Palindrome                                                                                                                                                                         
5.Exit                                                                                                                                                                               
Enter choice: 2                                                                                                                                                                      
element popped is                                                                                                                                                                    
7               

*********************************************************************


2:

#include <stdio.h>
#include <stdlib.h>
#define MAX_ELE 3
void push (int[], int *);
void pop (int[], int *);
void display (int[], int *);

int
main ()
{
  int ch, top = -1;		// sp, TOS
  int *s;
  s = (int *) malloc (MAX_ELE);
  for (;;)
    {
      printf ("1:push\n2:pop\n3:display\n4.Exit\n");
      printf ("Enter choice: ");
      scanf ("%d", &ch);
      switch (ch)
	{
	case 1:
	  push (s, &top);
	  break;
	case 2:
	  pop (s, &top);
	  break;
	case 3:
	  display (s, &top);
	  break;
	default:
	  exit (0);
	}
    }
}

void
display (int s[], int *top)
{
  int i;
  if ((*top) == -1)
    printf ("stack empty\n");
  else
    {
      printf ("stack elements are\n");
      printf ("TOS is: ");
      for (i = (*top); i >= 0; i--)
	printf ("%d\n", s[i]);
    }
}

void
push (int *s, int *top)
{
  int ele;
  if ((*top) == MAX_ELE - 1)
    {
      printf ("stack overflow\n");
      s = (int *) realloc (s, MAX_ELE * 2);
    }
  (*top)++;
  printf ("enter the element\n");
  scanf ("%d", &ele);
  s[*top] = ele;
}

void
pop (int s[], int *top)
{
  if ((*top) == -1)
    printf ("stack underflow\n");
  else
    {
      printf ("element popped is\n");
      printf ("%d\n", s[*top]);
      (*top)--;
    }
}

***************************************************************

3:

#include <stdio.h>
#include <stdlib.h>
#define Max 3
void insert (int[], int *);
void del (int[], int *, int);
void display (int[], int, int);
int
main ()
{
  int q[Max];
  int r = -1, f = 0;
  int ch;
  while (1)
    {
      printf ("1: Insert\n2: Delete\n3: Display\n4: Exit\n");
      printf ("Enter choice\n");
      scanf ("%d", &ch);
      switch (ch)
	{
	case 1:
	  insert (q, &r);
	  break;
	case 2:
	  del (q, &f, r);
	  break;
	case 3:
	  display (q, f, r);
	  break;
	default:
	  exit (0);
	}
    }
}

void
insert (int q[], int *r)
{
  int ele;
  if ((*r) == Max - 1)
    {
      printf ("overflow\n");
      return;
    }
  (*r)++;
  printf ("enter the ele\n");
  scanf ("%d", &ele);
  q[*r] = ele;
}

void
del (int q[], int *f, int r)
{
  if ((*f) > r)
    {
      printf ("Queue is empty\n");
      return;
    }
  printf ("Element deleted from queue is %d\n", q[(*f)]);
  (*f)++;
}

void
display (int q[], int f, int r)
{
  int i;
  if (f > r)
    {
      printf ("Queue is empty\n");
      return;
    }
  printf ("Queue contents are\n");
  for (i = f; i <= r; i++)
    printf ("%d\n", q[i]);
}


output:

1: Insert                                                                                                                                                                            
2: Delete                                                                                                                                                                            
3: Display                                                                                                                                                                           
4: Exit                                                                                                                                                                              
Enter choice                                                                                                                                                                         
1                                                                                                                                                                                    
enter the ele                                                                                                                                                                        
6                                                                                                                                                                                    
1: Insert                                                                                                                                                                            
2: Delete                                                                                                                                                                            
3: Display                                                                                                                                                                           
4: Exit                                                                                                                                                                              
Enter choice                                                                                                                                                                         
1                                                                                                                                                                                    
enter the ele                                                                                                                                                                        
8                                                                                                                                                                                    
1: Insert                                                                                                                                                                            
2: Delete                                                                                                                                                                            
3: Display                                                                                                                                                                           
4: Exit                                                                                                                                                                              
Enter choice                                                                                                                                                                         
3                                                                                                                                                                                    
Queue contents are                                                                                                                                                                   
6                                                                                                                                                                                    
8                                                                                                                                                                                    
1: Insert                                                                                                                                                                            
2: Delete                                                                                                                                                                            
3: Display                                                                                                                                                                           
4: Exit                                                                                                                                                                              
Enter choice                                                                                                                                                                         
2                                                                                                                                                                                    
Element deleted from queue is 6      


*********************************************************************************

4:

#include <stdio.h>
 #include<stdlib.h>
#define SIZE 20
#define TRUE 1 
#define FALSE 0
struct book
{
    int book_id;
    char title[10];
    char author[10];
    float price;
    int no_pages;
};
void push(struct book, int *, struct book[]);
struct book  pop(int *, struct book []);
struct book peep(int , struct book []);
void display(int , struct book []);
int stackfull(int *);
int stackempty(int *);



int stackfull(int *top)
{
    if(*top==SIZE-1)
      return TRUE;
    return FALSE;
}
int stackempty(int *top)
{
    if(*top==-1)
      return TRUE;
    return FALSE;
}
void push(struct book ele, int *top, struct book stack[])
{
    	(*top)++;
	stack[*top]=ele;
}

struct book pop(int *top, struct book stack[])
{
        struct book ele;
	ele=stack[*top];
	(*top)--;
	return ele;	
}
struct book peep(int top,struct book stack[])
{
    return stack[top];
}

void display(int top, struct book stack[])
{
   printf("******************************************\n");
   printf("Bppk_Id\t Title\t Author\t Price\t No_pages\n");
   printf("******************************************\n");
   for (int i=top; i>=0; i--)
    {
        printf("%d\t %s\t %s\t %.2f\t %d\n", stack[i].book_id, stack[i].title, stack[i].author, stack[i].price, stack[i].no_pages);
    }
}
int main()
{
    struct book stack[SIZE], ele;
    int  choice, item;
    int top=-1;
    struct book pop_item, peep_item;
    for(;;)
    {
        printf("\tEnter 1 for push, 2 for pop  3 for pip and 4 for display 5 for exit\n");
        scanf("%d", &choice);
        switch(choice)
        {
            case 1: if(stackfull(&top))
                      {
                          printf("The Stack is full\n");
                          break;
                      }
                   printf("Enter the book id title, author name, price and number of pages in order\n");
                    scanf("%d%s%s%f%d", &ele.book_id, ele.title, ele. author, &ele.price, &ele.no_pages);
                    push(ele,&top,stack);
                    break;
             case 2: if (stackempty(&top))
                     {
                          printf(" The stack is empty \n");
                          break;
                     }
                     pop_item=pop(&top,stack);
                     printf("The detailes of popped record are\n");
                     printf("%d\t %s\t %s\t %.2f\t %d\n", pop_item.book_id, pop_item.title, pop_item.author, pop_item.price, pop_item.no_pages);
                     
                     break;       
            case 3: if (stackempty(&top))
                     {
                          printf(" The stack is empty \n");
                          break;
                     }
                     peep_item=peep(top, stack);
                     printf("The item at the top of the stack is\n");
                     printf("%d\t %s\t %s\t %.2f\t %d\n", peep_item.book_id, peep_item.title, peep_item.author, peep_item.price, peep_item.no_pages);
                     break;
            case 4 : if (stackempty(&top))
                     {
                          printf(" The stack is empty \n");
                          break;
                     }
                     printf("The content of the stack are \n");
                     display(top, stack);
                     break;
            case 5:exit(0);
            default: printf("Enter a valid choice\n");
        }
                    
        
    }

    return 0;
}


output:

200                                                                                                                                                                                  
        Enter 1 for push, 2 for pop  3 for pip and 4 for display 5 for exit                                                                                                          
4                                                                                                                                                                                    
The content of the stack are                                                                                                                                                         
******************************************                                                                                                                                           
Bppk_Id  Title   Author  Price   No_pages                                                                                                                                            
******************************************                                                                                                                                           
1        gold    sam     99.00   200                                                                                                                                                 
        Enter 1 for push, 2 for pop  3 for pip and 4 for display 5 for exit                                                                                                          
1                                                                                                                                                                                    
Enter the book id title, author name, price and number of pages in order                                                                                                             
002                                                                                                                                                                                  
air                                                                                                                                                                                  
kim                                                                                                                                                                                  
199                                                                                                                                                                                  
250                                                                                                                                                                                  
        Enter 1 for push, 2 for pop  3 for pip and 4 for display 5 for exit                                                                                                          
4                                                                                                                                                                                    
The content of the stack are                                                                                                                                                         
******************************************                                                                                                                                           
Bppk_Id  Title   Author  Price   No_pages                                                                                                                                            
******************************************                                                                                                                                           
2        air     kim     199.00  250                                                                                                                                                 
1        gold    sam     99.00   200                                                                                                                                                 
        Enter 1 for push, 2 for pop  3 for pip and 4 for display 5 for exit                                                                                                          
3                                                                                                                                                                                    
The item at the top of the stack is                                                                                                                                                  
2        air     kim     199.00  250                                                                                                                                                 
        Enter 1 for push, 2 for pop  3 for pip and 4 for display 5 for exit                                                                                                          
2                                                                                                                                                                                    
The detailes of popped record are                                                                                                                                                    
2        air     kim     199.00  250                                                                                                                                                 
        Enter 1 for push, 2 for pop  3 for pip and 4 for display 5 for exit                                                                                                          
4                                                                                                                                                                                    
The content of the stack are                                                                                                                                                         
******************************************                                                                                                                                           
Bppk_Id  Title   Author  Price   No_pages                                                                                                                                            
******************************************                                                                                                                                           
1        gold    sam     99.00   200                                                                                                                                                 
        Enter 1 for push, 2 for pop  3 for pip and 4 for display 5 for exit                                                                                                          


**************************************************************************************************************

5:


#include <stdio.h>
#include <stdlib.h>
void main()
{
	int i,n,a[20],large,pos;
	printf("enter the no of elements\n");
	scanf("%d",&n);
	printf("enter the elements of the array\n");
    	for(int i=0;i<n;i++)
        	scanf("%d",&a[i]);
	for(i=0;i<n;i++)
	{
		if(a[i+1]>a[i])
		{
			large=a[i+1];
			pos=i+1;
		}	
	}
	printf("the largest element is %d\n",large);
	i=pos;
	printf("elements before largest ");	
	while(i>=0)
	{
		printf("%d ",a[i]);
		i--;
	}
	printf("\nelements after largest ");
	i=pos;
	while(i<n)
	{
		printf("%d ",a[i]);
		i++;
	}
}


output:

enter the no of elements                                                                                                                                                             
5                                                                                                                                                                                    
enter the elements of the array                                                                                                                                                      
45                                                                                                                                                                                   
78                                                                                                                                                                                   
5                                                                                                                                                                                    
98                                                                                                                                                                                   
78                                                                                                                                                                                   
the largest element is 98                                                                                                                                                            
elements before largest  5 78 45                                                                                                                                                   
elements after largest  78                                                                                                                                                         
                                                                                                                                                                                                                      
                                                             